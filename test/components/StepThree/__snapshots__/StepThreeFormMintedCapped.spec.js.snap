// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StepThreeFormMintedCapped should render StepThreeFormMintedCapped 1`] = `
<form
  className="st-StepContent_FormFullHeight"
  onSubmit={[Function]}
>
  <div />
  <h2
    className="sw-BorderedBlockTitle"
  >
    Global settings
  </h2>
  <div
    className="sw-BorderedBlock sw-BorderedBlock-CrowdSaleSetupGlobalSettingsWhitelistCapped"
    tabIndex="0"
  >
    <div
      className="sw-InputField2 "
    >
      <div
        className="sw-FormControlTitle"
      >
        <label
          className="sw-FormControlTitle_Label"
        >
          Wallet Address
        </label>
        <div
          className="sw-FormControlTitle_Info"
          tabIndex="-1"
        >
          <span
            className="sw-FormControlTitle_Tooltip"
          >
            Where the money goes after contributors transactions. Immediately after each transaction. We
                        recommend to setup a multisig wallet with hardware based signers.
          </span>
        </div>
      </div>
      <input
        autoComplete="off"
        className="sw-TextField"
        id="walletAddress"
        name="walletAddress"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        placeholder="Enter here"
        value="0xAC7022d55dA6C8BB229b1Ba3Ce8A16724FF79c4A"
      />
    </div>
    <div
      className="sw-GasPriceInput"
    >
      <div
        className="sw-FormControlTitle"
      >
        <label
          className="sw-FormControlTitle_Label"
        >
          Gas Price
        </label>
        <div
          className="sw-FormControlTitle_Info"
          tabIndex="-1"
        >
          <span
            className="sw-FormControlTitle_Tooltip"
          >
            Slow is cheap, fast is expensive.
          </span>
        </div>
      </div>
      <div
        className="sw-GasPriceInput_Select"
      >
        <button
          className="sw-GasPriceInput_SelectButton"
          onClick={[Function]}
          type="button"
        >
          <span
            className="sw-GasPriceInput_SelectButtonText"
          >
            Safe and Cheap (5 GWei)
          </span>
          <span
            className="sw-GasPriceInput_SelectButtonChevron"
          />
        </button>
        <div
          className="sw-GasPriceInput_SelectList"
          onClick={[Function]}
        >
          <label
            className="sw-GasPriceInput_SelectItem"
            onClick={[Function]}
          >
            <input
              checked={true}
              className="sw-GasPriceInput_SelectInput"
              id="slow"
              name="gas-price"
              type="radio"
              value="slow"
            />
            <span
              className="sw-GasPriceInput_SelectText"
            >
              Safe and Cheap (5 GWei)
            </span>
          </label>
          <label
            className="sw-GasPriceInput_SelectItem"
            onClick={[Function]}
          >
            <input
              checked={false}
              className="sw-GasPriceInput_SelectInput"
              id="normal"
              name="gas-price"
              type="radio"
              value="normal"
            />
            <span
              className="sw-GasPriceInput_SelectText"
            >
              Normal (10 GWei)
            </span>
          </label>
          <label
            className="sw-GasPriceInput_SelectItem"
            onClick={[Function]}
          >
            <input
              checked={false}
              className="sw-GasPriceInput_SelectInput"
              id="fast"
              name="gas-price"
              type="radio"
              value="fast"
            />
            <span
              className="sw-GasPriceInput_SelectText"
            >
              Fast and Expensive (15 GWei)
            </span>
          </label>
          <label
            className="sw-GasPriceInput_SelectItem"
            onClick={[Function]}
          >
            <input
              checked={false}
              className="sw-GasPriceInput_SelectInput"
              id="custom"
              name="gas-price"
              type="radio"
              value="custom"
            />
            <span
              className="sw-GasPriceInput_SelectText"
            >
              Custom
            </span>
          </label>
        </div>
      </div>
    </div>
  </div>
  <div
    className="sw-TierBlock"
  >
    <div
      className="sw-BorderedBlock sw-BorderedBlock-TierBlocksWhitelistCapped"
    >
      <div
        className="sw-InputField2 sw-InputField2-TierSetupName"
      >
        <div
          className="sw-FormControlTitle"
        >
          <label
            className="sw-FormControlTitle_Label"
          >
            Tier setup name
          </label>
          <div
            className="sw-FormControlTitle_Info"
            tabIndex="-1"
          >
            <span
              className="sw-FormControlTitle_Tooltip"
            >
              Name of a tier, e.g. PrePreCrowdsale, PreCrowdsale, Crowdsale with bonus A, Crowdsale with bonus B, etc. We simplified that and will increment a number after each tier.
            </span>
          </div>
        </div>
        <input
          autoComplete="off"
          className="sw-TextField"
          id="tiers[0].tier"
          name="tiers[0].tier"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          placeholder="Enter here"
          type="text"
          value="Tier 1"
        />
      </div>
      <div
        className="sw-InputField2 sw-InputField2-CrowdsaleStartTime"
      >
        <div
          className="sw-FormControlTitle"
        >
          <label
            className="sw-FormControlTitle_Label"
          >
            Start Time
          </label>
          <div
            className="sw-FormControlTitle_Info"
            tabIndex="-1"
          >
            <span
              className="sw-FormControlTitle_Tooltip"
            >
              Date and time when the tier starts. Can't be in the past from the current moment.
            </span>
          </div>
        </div>
        <input
          autoComplete="off"
          className="sw-TextField"
          disabled={false}
          id="tiers[0].startTime"
          name="tiers[0].startTime"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="datetime-local"
          value="2018-03-12T11:05"
        />
      </div>
      <div
        className="sw-InputField2 sw-InputField2-CrowdsaleEndTime"
      >
        <div
          className="sw-FormControlTitle"
        >
          <label
            className="sw-FormControlTitle_Label"
          >
            End Time
          </label>
          <div
            className="sw-FormControlTitle_Info"
            tabIndex="-1"
          >
            <span
              className="sw-FormControlTitle_Tooltip"
            >
              Date and time when the tier ends. Can be only in the future.
            </span>
          </div>
        </div>
        <input
          autoComplete="off"
          className="sw-TextField"
          id="tiers[0].endTime"
          name="tiers[0].endTime"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="datetime-local"
          value="2018-03-16T00:00"
        />
      </div>
      <div
        className="sw-InputField2 sw-InputField2-CrowdsaleRate"
      >
        <div
          className="sw-FormControlTitle"
        >
          <label
            className="sw-FormControlTitle_Label"
          >
            Rate
          </label>
          <div
            className="sw-FormControlTitle_Info"
            tabIndex="-1"
          >
            <span
              className="sw-FormControlTitle_Tooltip"
            >
              Exchange rate Ethereum to Tokens. If it's 100, then for 1 Ether you can buy 100 tokens
            </span>
          </div>
        </div>
        <input
          autoComplete="off"
          className="sw-TextField"
          id="tiers[0].rate"
          max="1000000000000000000"
          min="0"
          name="tiers[0].rate"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          placeholder="Enter here"
          type="number"
          value=""
        />
        <div
          className="sw-Errors"
        >
          <div
            className="sw-Errors_Item"
          >
            Please enter a valid number greater than 0
          </div>
          <div
            className="sw-Errors_Item"
          >
            Should be integer
          </div>
          <div
            className="sw-Errors_Item"
          >
            Should not be greater than 1 quintillion (10^18)
          </div>
        </div>
      </div>
      <div
        className="sw-InputField2 sw-InputField2-CrowdsaleSupply"
      >
        <div
          className="sw-FormControlTitle"
        >
          <label
            className="sw-FormControlTitle_Label"
          >
            Supply
          </label>
          <div
            className="sw-FormControlTitle_Info"
            tabIndex="-1"
          >
            <span
              className="sw-FormControlTitle_Tooltip"
            >
              How many tokens will be sold on this tier. Cap of crowdsale equals to sum of supply of all tiers
            </span>
          </div>
        </div>
        <input
          autoComplete="off"
          className="sw-TextField"
          disabled={false}
          id="tiers[0].supply"
          min="0"
          name="tiers[0].supply"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          placeholder="Enter here"
          type="number"
          value=""
        />
        <div
          className="sw-Errors"
        >
          <div
            className="sw-Errors_Item"
          >
            Please enter a valid number greater than 0
          </div>
        </div>
      </div>
      <div
        className="sw-InputField2 sw-InputField2-MinCap"
      >
        <div
          className="sw-FormControlTitle"
        >
          <label
            className="sw-FormControlTitle_Label"
          >
            Contributor min cap
          </label>
          <div
            className="sw-FormControlTitle_Info"
            tabIndex="-1"
          >
            <span
              className="sw-FormControlTitle_Tooltip"
            >
              Minimum amount of tokens to buy. Not the minimal amount for every transaction: if minCap is 1
               and a user already has 1 token from a previous transaction, they can buy any amount they want.
            </span>
          </div>
        </div>
        <input
          autoComplete="off"
          className="sw-TextField"
          disabled={false}
          id="tiers[0].minCap"
          max=""
          min="0"
          name="tiers[0].minCap"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          placeholder="Enter here"
          type="number"
          value="0"
        />
        <div
          className="sw-Errors"
        >
          <div
            className="sw-Errors_Item"
          >
            Decimals should not exceed undefined places
          </div>
        </div>
      </div>
      <div
        className="sw-RadioButton sw-InputField2-WhitelistEnabled"
      >
        <div
          className="sw-FormControlTitle"
        >
          <label
            className="sw-FormControlTitle_Label"
          >
            Enable whitelisting
          </label>
          <div
            className="sw-FormControlTitle_Info"
            tabIndex="-1"
          >
            <span
              className="sw-FormControlTitle_Tooltip"
            >
              Enables whitelisting. If disabled, anyone can participate in the crowdsale.
            </span>
          </div>
        </div>
        <div
          className="sw-RadioButton_Container"
        >
          <label
            className="sw-RadioButton_Label"
          >
            <input
              checked={false}
              className="sw-RadioButton_Input"
              disabled={true}
              id="tiers[0].whitelistEnabled.enable_whitelisting_yes"
              name="tiers[0].whitelistEnabled"
              onChange={[Function]}
              type="radio"
              value="yes"
            />
            <span
              className="sw-RadioButton_Button"
            >
              Yes
            </span>
          </label>
          <label
            className="sw-RadioButton_Label"
          >
            <input
              checked={true}
              className="sw-RadioButton_Input"
              disabled={true}
              id="tiers[0].whitelistEnabled.enable_whitelisting_no"
              name="tiers[0].whitelistEnabled"
              onChange={[Function]}
              type="radio"
              value="no"
            />
            <span
              className="sw-RadioButton_Button"
            >
              No
            </span>
          </label>
        </div>
      </div>
      <div
        className="sw-RadioButton sw-InputField2-AllowModifying"
      >
        <div
          className="sw-FormControlTitle"
        >
          <label
            className="sw-FormControlTitle_Label"
          >
            Allow modifying
          </label>
          <div
            className="sw-FormControlTitle_Info"
            tabIndex="-1"
          >
            <span
              className="sw-FormControlTitle_Tooltip"
            >
              If it's enabled, a creator of the crowdsale can modify crowdsale duration after publishing.
            </span>
          </div>
        </div>
        <div
          className="sw-RadioButton_Container"
        >
          <label
            className="sw-RadioButton_Label"
          >
            <input
              checked={false}
              className="sw-RadioButton_Input"
              id="tiers[0].updatable.allow_modifying_on"
              name="tiers[0].updatable"
              onChange={[Function]}
              type="radio"
              value="on"
            />
            <span
              className="sw-RadioButton_Button"
            >
              Yes
            </span>
          </label>
          <label
            className="sw-RadioButton_Label"
          >
            <input
              checked={true}
              className="sw-RadioButton_Input"
              id="tiers[0].updatable.allow_modifying_off"
              name="tiers[0].updatable"
              onChange={[Function]}
              type="radio"
              value="off"
            />
            <span
              className="sw-RadioButton_Button"
            >
              No
            </span>
          </label>
        </div>
      </div>
    </div>
  </div>
  <button
    className="ti-AddTierButton"
    onClick={[Function]}
    type="button"
  >
    <span
      className="ti-AddTierButton_Text"
    >
      Add Tier
    </span>
    <span
      className="ti-AddTierButton_PlusIcon"
    />
  </button>
  <div
    className="st-StepContent_Buttons"
  >
    <button
      className="sw-ButtonBack "
      disabled={true}
      type="button"
    >
      Back
    </button>
    <button
      className="sw-ButtonContinue "
      disabled={true}
      type="submit"
    >
      <span
        className="sw-ButtonContinue_Text"
      >
        Continue
      </span>
    </button>
  </div>
</form>
`;
