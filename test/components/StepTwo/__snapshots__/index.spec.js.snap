// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StepTwo should render StepTwo for Dutch Auction strategy 1`] = `
<div>
  <section
    className="lo-MenuBarAndContent"
  >
    <div
      className="st-StepNavigation"
    >
      <a
        className="sw-LogoWhite"
        href="/"
      />
      <div
        className="st-StepNavigation_Container"
      >
        <div
          className="st-StepItem
        active  "
        >
          <div
            className="st-StepItem_Circle"
          />
          <div
            className="st-StepItem_Line"
          />
          <span
            className="st-StepItem_Text"
          >
            Crowdsale Strategy
          </span>
        </div>
        <div
          className="st-StepItem
        active  "
        >
          <div
            className="st-StepItem_Circle"
          />
          <div
            className="st-StepItem_Line"
          />
          <span
            className="st-StepItem_Text"
          >
            Token Setup
          </span>
        </div>
        <div
          className="st-StepItem
          "
        >
          <div
            className="st-StepItem_Circle"
          />
          <div
            className="st-StepItem_Line"
          />
          <span
            className="st-StepItem_Text"
          >
            Crowdsale Setup
          </span>
        </div>
        <div
          className="st-StepItem
          "
        >
          <div
            className="st-StepItem_Circle"
          />
          <div
            className="st-StepItem_Line"
          />
          <span
            className="st-StepItem_Text"
          >
            Publish
          </span>
        </div>
        <div
          className="st-StepItem
          "
        >
          <div
            className="st-StepItem_Circle"
          />
          <span
            className="st-StepItem_Text"
          >
            Crowdsale Page
          </span>
        </div>
      </div>
    </div>
    <div
      className="st-StepContent"
    >
      <div
        className="st-SectionInfo "
      >
        <div
          className="st-SectionInfo_Icon st-SectionInfo_Icon-step2"
        />
        <div
          className="st-SectionInfo_Text"
        >
          <h1
            className="st-SectionInfo_Title"
          >
            Token Setup
          </h1>
          <p
            className="st-SectionInfo_Description"
            dangerouslySetInnerHTML={
              Object {
                "__html": "Configure properties for your token. Created token contract will be ERC-20 compatible.",
              }
            }
          />
        </div>
      </div>
      <form
        className="st-StepContent_FormFullHeight"
        id="tokenData"
        onSubmit={[Function]}
      >
        <div
          className="sw-BorderedBlock sw-BorderedBlock-GeneralSettingsDutchAuction"
        >
          <div
            className="sw-InputField2 "
          >
            <div
              className="sw-FormControlTitle"
            >
              <label
                className="sw-FormControlTitle_Label"
              >
                Name
              </label>
              <div
                className="sw-FormControlTitle_Info"
                tabIndex="-1"
              >
                <span
                  className="sw-FormControlTitle_Tooltip"
                >
                  The name of your token. Will be used by Etherscan and other tokenbrowsers. Be afraid of trademarks.
                </span>
              </div>
            </div>
            <input
              autoComplete="off"
              className="sw-TextField"
              id="name"
              name="name"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              placeholder="Enter here"
              type="text"
              value=""
            />
          </div>
          <div
            className="sw-InputField2 "
          >
            <div
              className="sw-FormControlTitle"
            >
              <label
                className="sw-FormControlTitle_Label"
              >
                Ticker
              </label>
              <div
                className="sw-FormControlTitle_Info"
                tabIndex="-1"
              >
                <span
                  className="sw-FormControlTitle_Tooltip"
                >
                  The five letter ticker for your token. There are 11,881,376 combinations for 26 english letters. Be hurry.
                </span>
              </div>
            </div>
            <input
              autoComplete="off"
              className="sw-TextField"
              id="ticker"
              name="ticker"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              placeholder="Enter here"
              type="text"
              value=""
            />
          </div>
          <div
            className="sw-InputField2 "
          >
            <div
              className="sw-FormControlTitle"
            >
              <label
                className="sw-FormControlTitle_Label"
              >
                Decimals
              </label>
              <div
                className="sw-FormControlTitle_Info"
                tabIndex="-1"
              >
                <span
                  className="sw-FormControlTitle_Tooltip"
                >
                  Refers to how divisible a token can be, from 0 (not at all divisible) to 18 (pretty much continuous).
                </span>
              </div>
            </div>
            <input
              autoComplete="off"
              className="sw-TextField"
              disabled={false}
              id="decimals"
              max="18"
              min="0"
              name="decimals"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              placeholder="Enter here"
              type="number"
              value=""
            />
          </div>
          <div
            className="sw-InputField2 "
          >
            <div
              className="sw-FormControlTitle"
            >
              <label
                className="sw-FormControlTitle_Label"
              >
                Supply
              </label>
              <div
                className="sw-FormControlTitle_Info"
                tabIndex="-1"
              >
                <span
                  className="sw-FormControlTitle_Tooltip"
                >
                  The total supply of the token
                </span>
              </div>
            </div>
            <input
              autoComplete="off"
              className="sw-TextField"
              id="supply"
              min="0"
              name="supply"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              placeholder="Enter here"
              type="number"
              value=""
            />
          </div>
        </div>
        <div
          className="st-StepContent_Buttons"
        >
          <button
            className="sw-ButtonBack "
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            Back
          </button>
          <button
            className="sw-ButtonContinue "
            disabled={true}
            type="submit"
          >
            <span
              className="sw-ButtonContinue_Text"
            >
              Continue
            </span>
          </button>
        </div>
      </form>
    </div>
  </section>
</div>
`;

exports[`StepTwo should render StepTwo for Minted Capped strategy 1`] = `
<div>
  <section
    className="lo-MenuBarAndContent"
  >
    <div
      className="st-StepNavigation"
    >
      <a
        className="sw-LogoWhite"
        href="/"
      />
      <div
        className="st-StepNavigation_Container"
      >
        <div
          className="st-StepItem
        active  "
        >
          <div
            className="st-StepItem_Circle"
          />
          <div
            className="st-StepItem_Line"
          />
          <span
            className="st-StepItem_Text"
          >
            Crowdsale Strategy
          </span>
        </div>
        <div
          className="st-StepItem
        active  "
        >
          <div
            className="st-StepItem_Circle"
          />
          <div
            className="st-StepItem_Line"
          />
          <span
            className="st-StepItem_Text"
          >
            Token Setup
          </span>
        </div>
        <div
          className="st-StepItem
          "
        >
          <div
            className="st-StepItem_Circle"
          />
          <div
            className="st-StepItem_Line"
          />
          <span
            className="st-StepItem_Text"
          >
            Crowdsale Setup
          </span>
        </div>
        <div
          className="st-StepItem
          "
        >
          <div
            className="st-StepItem_Circle"
          />
          <div
            className="st-StepItem_Line"
          />
          <span
            className="st-StepItem_Text"
          >
            Publish
          </span>
        </div>
        <div
          className="st-StepItem
          "
        >
          <div
            className="st-StepItem_Circle"
          />
          <span
            className="st-StepItem_Text"
          >
            Crowdsale Page
          </span>
        </div>
      </div>
    </div>
    <div
      className="st-StepContent"
    >
      <div
        className="st-SectionInfo "
      >
        <div
          className="st-SectionInfo_Icon st-SectionInfo_Icon-step2"
        />
        <div
          className="st-SectionInfo_Text"
        >
          <h1
            className="st-SectionInfo_Title"
          >
            Token Setup
          </h1>
          <p
            className="st-SectionInfo_Description"
            dangerouslySetInnerHTML={
              Object {
                "__html": "Configure properties for your token. Created token contract will be ERC-20 compatible.",
              }
            }
          />
        </div>
      </div>
      <form
        className="st-StepContent_FormFullHeight"
        id="tokenData"
        onSubmit={[Function]}
      >
        <div
          className="sw-BorderedBlock sw-BorderedBlock-GeneralSettingsWhitelistCapped"
        >
          <div
            className="sw-InputField2 "
          >
            <div
              className="sw-FormControlTitle"
            >
              <label
                className="sw-FormControlTitle_Label"
              >
                Name
              </label>
              <div
                className="sw-FormControlTitle_Info"
                tabIndex="-1"
              >
                <span
                  className="sw-FormControlTitle_Tooltip"
                >
                  The name of your token. Will be used by Etherscan and other tokenbrowsers. Be afraid of trademarks.
                </span>
              </div>
            </div>
            <input
              autoComplete="off"
              className="sw-TextField"
              id="name"
              name="name"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              placeholder="Enter here"
              type="text"
              value=""
            />
          </div>
          <div
            className="sw-InputField2 "
          >
            <div
              className="sw-FormControlTitle"
            >
              <label
                className="sw-FormControlTitle_Label"
              >
                Ticker
              </label>
              <div
                className="sw-FormControlTitle_Info"
                tabIndex="-1"
              >
                <span
                  className="sw-FormControlTitle_Tooltip"
                >
                  The five letter ticker for your token. There are 11,881,376 combinations for 26 english letters. Be hurry.
                </span>
              </div>
            </div>
            <input
              autoComplete="off"
              className="sw-TextField"
              id="ticker"
              name="ticker"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              placeholder="Enter here"
              type="text"
              value=""
            />
          </div>
          <div
            className="sw-InputField2 "
          >
            <div
              className="sw-FormControlTitle"
            >
              <label
                className="sw-FormControlTitle_Label"
              >
                Decimals
              </label>
              <div
                className="sw-FormControlTitle_Info"
                tabIndex="-1"
              >
                <span
                  className="sw-FormControlTitle_Tooltip"
                >
                  Refers to how divisible a token can be, from 0 (not at all divisible) to 18 (pretty much continuous).
                </span>
              </div>
            </div>
            <input
              autoComplete="off"
              className="sw-TextField"
              disabled={false}
              id="decimals"
              max="18"
              min="0"
              name="decimals"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              placeholder="Enter here"
              type="number"
              value=""
            />
          </div>
        </div>
        <div
          className="st-StepContent_Buttons"
        >
          <button
            className="sw-ButtonBack "
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            Back
          </button>
          <button
            className="sw-ButtonContinue "
            disabled={true}
            type="submit"
          >
            <span
              className="sw-ButtonContinue_Text"
            >
              Continue
            </span>
          </button>
        </div>
      </form>
    </div>
  </section>
</div>
`;
